services:
  db:
    image: postgres:latest
    container_name: gpteam-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"

  redis:
    image: redis:latest
    container_name: gpteam-redis
    ports:
      - "${REDIS_PORT}:6379"

  file-decoder:
    build:
      context: ./microservice
      dockerfile: Dockerfile
    container_name: gpteam-file-decoder
    ports:
      - "${FILE_DECODER_PORT}:8000"

  db-test:
    image: postgres:latest
    container_name: postgresTest
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: testUser
      POSTGRES_PASSWORD: testPassword
    volumes:
      - dbtest:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gpteam-backend
    depends_on:
      - db
      - redis
      - file-decoder
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - FILE_DECODER_URL=http://file-decoder:8000
      - FRONT_URL=http://frontend:80
      - AI_URL=${AI_URL}
      - AI_APIKEY=${AI_APIKEY}
    ports:
      - "${BACKEND_PORT}:8080"

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: gpteam-frontend
  #   ports:
  #     - "8090:80"
  #   environment:
  #     - API_URL=http://localhost:${BACKEND_PORT}
  #   volumes:
  #     - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  dbtest:
